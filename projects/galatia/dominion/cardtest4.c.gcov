        -:    0:Source:cardtest4.c
        -:    0:Programs:7
        -:    0:Source is newer than graph
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include <string.h>
        -:    4:#include <stdio.h>
        -:    5:#include <assert.h>
        -:    6:#include "rngs.h"
        -:    7:#include <stdlib.h>
        -:    8:
function main called 1 returned 100% blocks executed 100%
        1:    9:int main() {
        -:   10:	struct gameState G;
        1:   11:	int seed=1000;
        1:   12:	int numPlayers=2;
        1:   13:	int k[10] = {adventurer, embargo, village, minion, mine, cutpurse, sea_hag, tribute, smithy, council_room};
        1:   14:	initializeGame(numPlayers, k, seed, &G);
call    0 returned 100%
        1:   15:	int value=embargoCard(0,&G,0,0);
call    0 returned 100%
        1:   16:	printf("Testing for end of function: expeted: 0, actual: %d\n", value);
call    0 returned 100%
        1:   17:	printf("Testing for number of coins: expected: 6, actual: %d\n", G.coins);
call    0 returned 100%
        1:   18:	printf("Testing for embargo token: expected: 1, actual: %d\n", G.embargoTokens[0]);
call    0 returned 100%
        1:   19:	if(value!=0 || G.coins!=6 || G.embargoTokens[0]!=1){
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
branch  4 taken 100% (fallthrough)
branch  5 taken 0%
        1:   20:		printf("TEST FAILED\n");
call    0 returned 100%
        -:   21:	}
        -:   22:	else{
        -:   23:		printf("TESTING SUCCEEDED\n");
        -:   24:	}
        -:   25:}
